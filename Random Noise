random_noise <- function(image, noise_factor) {
  noise_factor <- 0.05
  # Generate random noise using a uniform distribution and multiply noise by noise_factor and add it to the input image
  image <- image + noise_factor * runif(n = length(image), min = -1, max = 1)
  # Clip pixel values of the 'image' to the range [0, 1]
  image <- pmin(pmax(image, 0), 1)
  # Return the noisy image with values in the range [0, 1]
  return(image)
}

#TEST
target_size = c(224, 224)
res <- c("", "")
f <- list.files("./test_images")
for (i in f) {
test_image <- image_load(paste("./test_images/", i, sep=""), target_size = target_size)
  x <- image_to_array(test_image)
  x <- array_reshape(x, c(1, dim(x)))
  x <- x / 255
  noise_factor <- 0.1
  x_noise <- random_noise(x, noise_factor)
  pred <- model %>% predict(x_noise)
  print(pred)
  if (pred[1, 2] < 0.50) {
    print(i)
  }
}
